

services:

  # ------------------------------
  # Object Storage (S3-compatible)
  # ------------------------------
  minio:
    image: minio/minio:latest
    container_name: minio
    platform: linux/arm64
    command: server --console-address ":9001" /data
    ports:
      - "9015:9000"
      - "9016:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./storage:/data

  # ------------------------------
  # Kafka + Zookeeper
  # ------------------------------
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    platform: linux/arm64
    ports:
      - "2181:2181"

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    platform: linux/arm64
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw

  # ------------------------------
  # Kafka UI
  # ------------------------------
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    platform: linux/arm64
    depends_on:
      - kafka
    ports:
      - "9017:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  # ------------------------------
  # Spark Development Environment
  # ------------------------------
  spark-dev:
    build:
      context: .
      dockerfile: Dockerfile.sparkdev
    container_name: spark-dev
    depends_on:
      - kafka
      - minio
    environment:
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
    ports:
      - "22022:22"
      - "8888:8888"
      - "4040:4040"
    volumes:
      - docker-data:/home/developer
      - ./src:/home/developer/src
      - ./notebooks:/home/developer/notebooks

volumes:
    docker-data: